package src.Choices;

import src.Choice;
import src.Option;
import src.Question;

import java.util.ArrayList;
import java.util.Arrays;

public class BGs extends Choice {
    public BGs(){
        super();
    }
    public ArrayList<Option> run(){
        ArrayList<Option> list = new ArrayList<Option>();
        ArrayList<Option> pick = new ArrayList<Option>();
        pick.add(new BackGround("Acolyte",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I idolize a particular hero of my faith, and constantly refer to that person's deeds and example."),
                        new Option ("I can find common ground between the fiercest enemies, empathizing with them and always working toward peace."),
                        new Option ("I see omens in every event and action. The gods try to speak to us, we just need to listen."),
                        new Option ("Nothing can shake my optimistic attitude."),
                        new Option ("I quote (or misquote) sacred texts and proverbs in almost every situation."),
                        new Option ("I am tolerant of other faiths and respect the worship of other gods."),
                        new Option ("I am intolerant of other faiths and condemn the worship of other gods."),
                        new Option ("I've enjoyed fine food, drink, and high society among my temple's elite. Rough living grates on me."),
                        new Option ("I've spent so long in the temple that I have little practical experience dealing with people in the outside world."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Tradition. The ancient traditions of worship and sacrifice must be preserved and upheld. (Lawful)"),
                        new Option ("Charity. I always try to help those in need, no matter what the personal cost. (Good)"),
                        new Option ("Change. We must help bring about the changes the gods are constantly working in the world. (Chaotic)"),
                        new Option ("Power. I hope to one day rise to the top of my faith's religious hierarchy. (Lawful)"),
                        new Option ("Faith. I trust that my deity will guide my actions. I have faith that if I work hard, things will go well. (Lawful)"),
                        new Option ("Aspiration. I seek to prove myself worthy of my god's favor by matching my actions against their teachings. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I would die to recover an ancient relic of my faith that was lost long ago."),
                        new Option ("I will someday get revenge on the corrupt temple hierarchy who branded me a heretic."),
                        new Option ("I owe my life to the priest who took me in when my parents died."),
                        new Option ("Everything I do is for the common people."),
                        new Option ("I will do anything to protect the temple where I served."),
                        new Option ("I seek to preserve a sacred text that my enemies consider heretical and seek to destroy."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I judge others harshly, and myself even more severely."),
                        new Option ("I put too much trust in those who wield power within my temple's hierarchy."),
                        new Option ("My piety sometimes leads me to blindly trust those that profess faith in my god."),
                        new Option ("I am inflexible in my thinking."),
                        new Option ("I am suspicious of strangers and expect the worst of them."),
                        new Option ("Once I pick a goal, I become obsessed with it to the detriment of everything else in my life."),
                        new Option ("Other.")))));
        pick.add(new BackGround("Anthropologist",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I prefer the company of those who aren't like me, including people of other races."),
                        new Option ("I'm a stickler when it comes to observing proper etiquette and local customs."),
                        new Option ("I would rather observe than meddle."),
                        new Option ("By living among violent people, I have become desensitized to violence."),
                        new Option ("I would risk life and limb to discover a new culture or unravel the secrets of a dead one."),
                        new Option ("When I arrive at a new settlement for the first time, I must learn all its customs."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Discovery. I want to be the first person to discover a lost culture. (Any)"),
                        new Option ("Distance. One must not interfere with the affairs of another culture â€“ even one in need of aid. (Lawful)"),
                        new Option ("Knowledge. By understanding other races and cultures, we learn to understand ourselves. (Any)"),
                        new Option ("Power. Common people crave strong leadership, and I do my utmost to provide it. (Lawful)"),
                        new Option ("Protection. I must do everything possible to save a society facing extinction. (Good)"),
                        new Option ("Indifferent. Life is cruel. What's the point in saving people if they're going to die anyway? (Chaotic)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("My mentor gave me a journal filled with lore and wisdom. Losing it would devastate me."),
                        new Option ("Having lived among the people of a primeval tribe or clan, I long to return and see how they are faring."),
                        new Option ("Years ago, tragedy struck the members of an isolated society I befriended, and I will honor them."),
                        new Option ("I want to learn more about a particular humanoid culture that fascinates me."),
                        new Option ("I seek to avenge a clan, tribe, kingdom, or empire that was wiped out."),
                        new Option ("I have a trinket that I believe is the key to finding a long-lost society."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("Boats make me seasick."),
                        new Option ("I talk to myself, and I don't make friends easily."),
                        new Option ("I believe that I'm intellectually superior to people from other cultures and have much to teach them."),
                        new Option ("I've picked up some unpleasant habits living among races such as goblins, lizardfolk, or orcs."),
                        new Option ("I complain about everything."),
                        new Option ("I wear a tribal mask and never take it off."),
                        new Option ("Other.")))));
        pick.add(new BackGround("Archaeologist",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I love a good puzzle or mystery."),
                        new Option ("I'm a pack rat who never throws anything away."),
                        new Option ("Fame is more important to me than money."),
                        new Option ("I have no qualms about stealing from the dead."),
                        new Option ("I'm happier in a dusty old tomb than I am in the centers of civilization."),
                        new Option ("Traps don't make me nervous. Idiots who trigger traps make me nervous."),
                        new Option ("I might fail, but I will never give up."),
                        new Option ("You might think I'm a scholar, but I love a good brawl. These fists were made for punching."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Preservation. That artifact belongs in a museum. (Good)"),
                        new Option ("Greed. I won't risk my life for nothing. I expect some kind of payment. (Any)"),
                        new Option ("Death Wish. Nothing is more exhilarating than a narrow escape from the jaws of death. (Chaotic)"),
                        new Option ("Dignity. The dead and their belongings deserve to be treated with respect. (Lawful)"),
                        new Option ("Immortality. All my exploring is part of a plan to find the secret of everlasting life. (Any)"),
                        new Option ("Danger. With every great discovery comes grave danger. The two walk hand in hand. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("Ever since I was a child, I've heard stories about a lost city. I aim to find it, learn its secrets, and earn my place in the history books."),
                        new Option ("I want to find my mentor, who disappeared on an expedition some time ago."),
                        new Option ("I have a friendly rival. Only one of us can be the best, and I aim to prove it's me."),
                        new Option ("I won't sell an art object or other treasure that has historical significance or is one of a kind."),
                        new Option ("I'm secretly in love with the wealthy patron who sponsors my archaeological exploits."),
                        new Option ("I hope to bring prestige to a library, a museum, or a university."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I have a secret fear of some common wild animal â€“ and in my work, I see them everywhere."),
                        new Option ("I can't leave a room without searching it for secret doors."),
                        new Option ("When I'm not exploring dungeons or ruins, I get jittery and impatient."),
                        new Option ("I have no time for friends or family. I spend every waking moment thinking about and preparing for my next expedition."),
                        new Option ("When given the choice of going left or right, I always go left."),
                        new Option ("When given the choice of going left or right, I always go right."),
                        new Option ("I can't sleep except in total darkness."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("10 ft Pole (Signature Item)"),
                        new Option ("Medallion (Signature Item)"),
                        new Option ("Crowbar (Signature Item)"),
                        new Option ("Shovel (Signature Item)"),
                        new Option ("Hat (Signature Item)"),
                        new Option ("Sledgehammer (Signature Item)"),
                        new Option ("Hooded Lantern (Signature Item)"),
                        new Option ("Whip (Signature Item)")))))));
        pick.add(new BackGround("Athlete",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I feel most at peace during physical exertion, whether exercise or battle."),
                        new Option ("I don't like to sit idle."),
                        new Option ("I have a daily exercise routine I refuse to break."),
                        new Option ("Obstacles exist to be overcome."),
                        new Option ("When I see others struggling, I offer to help."),
                        new Option ("I love to trade banter and gibes."),
                        new Option ("Anything worth doing is worth doing best."),
                        new Option ("I get irritated if people praise someone else and not me."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Competition. I strive to test myself in all things. (Chaotic)"),
                        new Option ("Triumph. The best part of winning is seeing my rivals brought low. (Evil)"),
                        new Option ("Camaraderie. The strongest bonds are forged through struggle. (Good)"),
                        new Option ("People. I strive to inspire my spectators. (Neutral)"),
                        new Option ("Tradition. Every game has rules, and the playing field must be level. (Lawful)"),
                        new Option ("Growth. Lessons hide in victory and defeat. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("My teammates are my family."),
                        new Option ("I will overcome a rival and prove myself their better."),
                        new Option ("My mistake got someone hurt. Ill never make that mistake again."),
                        new Option ("I will be the best for the honor and glory of my home."),
                        new Option ("The person who trained me is the most important person in my world."),
                        new Option ("I strive to live up to a specific hero's example."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I indulge in a habit that threatens my reputation or health."),
                        new Option ("I'll do absolutely anything to win."),
                        new Option ("I ignore anyone who doesn't compete and anyone who loses to me."),
                        new Option ("I have lingering pain of old injuries."),
                        new Option ("Any defeat or failure on my part is because my opponents cheated."),
                        new Option ("I must be the captain of any group I join."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Marathon (Favored Event)"),
                        new Option ("Long-Distance Running (Favored Event)"),
                        new Option ("Wrestling (Favored Event)"),
                        new Option ("Boxing (Favored Event)"),
                        new Option ("Chariot or Horse Race (Favored Event)"),
                        new Option ("Pankration (mixed unarmed combat) (Favored Event)"),
                        new Option ("Hoplite Race (racing in full armor with a unit) (Favored Event)"),
                        new Option ("Pentathlon (running, long jump, discus, javelin, wrestling) (Favored Event)")))))));
        pick.add(new BackGround("Charlatan",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I fall in and out of love easily, and am always pursuing someone."),
                        new Option ("I have a joke for every occasion, especially occasions where humor is inappropriate."),
                        new Option ("Flattery is my preferred trick for getting what I want"),
                        new Option ("I'm a born gambler who can't resist taking a risk for a potential payoff."),
                        new Option ("I lie about almost everything, even when there's no good reason to."),
                        new Option ("Sarcasm and insults are my weapons of choice."),
                        new Option ("I keep multiple holy symbols on me and invoke whatever deity might come in useful at any given moment."),
                        new Option ("I pocket anything I see that might have some value.\n"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Independence. I am a free spirit â€“ no one tells me what to do. (Chaotic)"),
                        new Option ("Fairness. I never target people who can't afford to lose a few coins. (Lawful)"),
                        new Option ("Charity. I distribute the money I acquire to the people who really need it. (Good)"),
                        new Option ("Creativity. I never run the same con twice. (Chaotic)"),
                        new Option ("Friendship. Material goods come and go. Bonds of friendship last forever. (Good)"),
                        new Option ("Aspiration. I'm determined to make something of myself. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I fleeced the wrong person and must work to ensure that this individual never crosses paths with me or those I care about."),
                        new Option ("I owe everything to my mentor â€“ a horrible person who's probably rotting in jail somewhere."),
                        new Option ("Somewhere out there, I have a child who doesn't know me. I'm making the world better for him or her."),
                        new Option ("I come from a noble family, and one day I'll reclaim my lands and title from those who stole them from me."),
                        new Option ("A powerful person killed someone I love. Some day soon, I'll have my revenge."),
                        new Option ("I swindled and ruined a person who didn't deserve it. I seek to atone for my misdeeds but might never be able to forgive myself."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I can't resist a pretty face."),
                        new Option ("I'm always in debt. I spend my ill-gotten gains on decadent luxuries faster than I bring them in."),
                        new Option ("I'm convinced that no one could ever fool me the way I fool others."),
                        new Option ("I'm too greedy for my own good. I can't resist taking a risk if there's money involved."),
                        new Option ("I can't resist swindling people who are more powerful than me."),
                        new Option ("I hate to admit it and will hate myself for it, but I'll run and preserve my own hide if the going gets tough."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("I cheat at games of chance. (Favored Scheme)"),
                        new Option ("I shave coins or forge documents. (Favored Scheme)"),
                        new Option ("I insinuate myself into people's lives to prey on their weakness and secure their fortunes. (Favored Scheme)"),
                        new Option ("I put on new identities like clothes. (Favored Scheme)"),
                        new Option ("I run sleight-of-hand cons on street corners. (Favored Scheme)"),
                        new Option ("I convince people that worthless junk is worth their hard-earned money. (Favored Scheme)")))))));
        pick.add(new BackGround("City Watch",//Replace with soldier trait, ideals, bonds, flaws
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Clan Crafter", // Replace with Guild Artisan
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Cloistered Scholar", //sage
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Courtier", //Guild Artisan
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Criminal",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I always have a plan for what to do when things go wrong."),
                        new Option ("I am always calm, no matter what the situation. I never raise my voice or let my emotions control me."),
                        new Option ("The first thing I do in a new place is note the locations of everything valuable â€“ or where such things could be hidden."),
                        new Option ("I would rather make a new friend than a new enemy."),
                        new Option ("I am incredibly slow to trust. Those who seem the fairest often have the most to hide."),
                        new Option ("I don't pay attention to the risks in a situation. Never tell me the odds."),
                        new Option ("The best way to get me to do something is to tell me I can't do it."),
                        new Option ("I blow up at the slightest insult."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Honor. I don't steal from others in the trade. (Lawful)"),
                        new Option ("Freedom. Chains are meant to be broken, as are those who would forge them. (Chaotic)"),
                        new Option ("Charity. I steal from the wealthy so that I can help people in need. (Good)"),
                        new Option ("Greed. I will do whatever it takes to become wealthy. (Evil)"),
                        new Option ("People. I'm loyal to my friends, not to any ideals, and everyone else can take a trip down the Styx for all I care. (Neutral)"),
                        new Option ("Redemption. There's a spark of good in everyone. (Good)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I'm trying to pay off an old debt I owe to a generous benefactor."),
                        new Option ("My ill-gotten gains go to support my family."),
                        new Option ("Something important was taken from me, and I aim to steal it back."),
                        new Option ("I will become the greatest thief that ever lived."),
                        new Option ("I'm guilty of a terrible crime. I hope I can redeem myself for it."),
                        new Option ("Someone I loved died because of I mistake I made. That will never happen again."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("When I see something valuable, I can't think about anything but how to steal it."),
                        new Option ("When faced with a choice between money and my friends, I usually choose the money."),
                        new Option ("If there's a plan, I'll forget it. If I don't forget it, I'll ignore it."),
                        new Option ("I have a \"tell\" that reveals when I'm lying."),
                        new Option ("I turn tail and run when things look bad."),
                        new Option ("An innocent person is in prison for a crime that I committed. I'm okay with that."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Blackmailer (Criminal Specialty)"),
                        new Option ("Burglar (Criminal Specialty)"),
                        new Option ("Enforcer (Criminal Specialty)"),
                        new Option ("Fence (Criminal Specialty)"),
                        new Option ("Highway robber (Criminal Specialty)"),
                        new Option ("Hired Killer (Criminal Specialty)"),
                        new Option ("Pickpocket (Criminal Specialty)"),
                        new Option ("Smuggler (Criminal Specialty)"))),
                        new ArrayList<Option>(Arrays.asList(
                                new Option ("Criminal"),
                                new Option ("Spy (Criminal")))
                        ))));
        pick.add(new BackGround("Entertainer",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I know a story relevant to almost every situation."),
                        new Option ("Whenever I come to a new place, I collect local rumors and spread gossip."),
                        new Option ("I'm a hopeless romantic, always searching for that \"special someone.\""),
                        new Option ("Nobody stays angry at me or around me for long, since I can defuse any amount of tension."),
                        new Option ("I love a good insult, even one directed at me."),
                        new Option ("I get bitter if I'm not the center of attention."),
                        new Option ("I'll settle for nothing less than perfection."),
                        new Option ("I change my mood or my mind as quickly as I change key in a song."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Beauty. When I perform, I make the world better than it was. (Good)"),
                        new Option ("Tradition. The stories, legends, and songs of the past must never be forgotten, for they teach us who we are. (Lawful)"),
                        new Option ("Creativity. The world is in need of new ideas and bold action. (Chaotic)"),
                        new Option ("Greed. I'm only in it for the money and fame. (Evil)"),
                        new Option ("People. I like seeing the smiles on people's faces when I perform. That's all that matters. (Neutral)"),
                        new Option ("Honesty. Art should reflect the soul; it should come from within and reveal who we really are. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("My instrument is my most treasured possession, and it reminds me of someone I love."),
                        new Option ("Someone stole my precious instrument, and someday I'll get it back."),
                        new Option ("I want to be famous, whatever it takes."),
                        new Option ("I idolize a hero of the old tales and measure my deeds against that person's."),
                        new Option ("I will do anything to prove myself superior to my hated rival."),
                        new Option ("I would do anything for the other members of my old troupe."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I'll do anything to win fame and renown."),
                        new Option ("I'm a sucker for a pretty face."),
                        new Option ("A scandal prevents me from ever going home again. That kind of trouble seems to follow me around."),
                        new Option ("I once satirized a noble who still wants my head. It was a mistake that I will likely repeat."),
                        new Option ("I have trouble keeping my true feelings hidden. My sharp tongue lands me in trouble."),
                        new Option ("Despite my best efforts, I am unreliable to my friends."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Actor (Routine)"),
                        new Option ("Dancer (Routine)"),
                        new Option ("Fire-eater (Routine)"),
                        new Option ("Jester (Routine)"),
                        new Option ("Juggler (Routine)"),
                        new Option ("Instrumentalist (Routine)"),
                        new Option ("Poet (Routine)"),
                        new Option ("Singer (Routine)"),
                        new Option ("Storyteller (Routine)"),
                        new Option ("Tumbler (Routine)"),
                        new Option ("Other (Routine)"),
                        new Option ("Gladiator (Variant Entertainer)")))))));
        pick.add(new BackGround("Faceless",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I'm earnest and uncommonly direct."),
                        new Option ("I strive to have no personalityâ€”it's easier to forget what's hardly there."),
                        new Option ("I treasure a memento of a person or instance that set me upon my path."),
                        new Option ("I sleep just as much as I need to and on an unusual schedule."),
                        new Option ("I think far ahead, a detachedness often mistaken for daydreaming."),
                        new Option ("I cultivate a single obscure hobby or study and eagerly discuss it at length."),
                        new Option ("I am ever learning how to be among othersâ€”when to stay quiet, when to laugh."),
                        new Option ("I behave like an extreme opposite of my persona."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Justice. Place in society shouldn't determine one's access to what is right. (Good)"),
                        new Option ("Security. Doing what must be done can't bring the innocent to harm. (Lawful)"),
                        new Option ("Confusion. Deception is a weapon. Strike from where your foes won't expect. (Chaotic)"),
                        new Option ("Infamy. My name will be a malediction, a curse that fulfills my will. (Evil)"),
                        new Option ("Incorruptibility. Be a symbol, and leave your flawed being behind. (Any)"),
                        new Option ("Anonymity. It's my deeds that should be remembered, not their instrument. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I do everything for my family. My first thought is keeping them safe."),
                        new Option ("What I do, I do for the world. The people don't realize how much they need me."),
                        new Option ("I've seen too many in need. I must not fail them as everyone else has."),
                        new Option ("I stand in opposition, lest the wicked go unopposed."),
                        new Option ("I am exceptional. I do this because no one else can, and no one can stop me."),
                        new Option ("I do everything for those who were taken from me."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I am callous about death. It comes to us all eventually."),
                        new Option ("I never make eye contact or hold it unflinchingly."),
                        new Option ("I have no sense of humor. Laughing is uncomfortable and embarrassing."),
                        new Option ("I overexert myself, sometimes needing to recuperate for a day or more."),
                        new Option ("I think far ahead, a detachedness often mistaken for daydreaming."),
                        new Option ("I see morality entirely in black and white."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("A flamboyant spy or brigand (Persona)"),
                        new Option ("The incarnation of a nation or people (Persona)"),
                        new Option ("A scoundrel with a masked guise (Persona)"),
                        new Option ("A vengeful spirit (Persona)"),
                        new Option ("The manifestation of a deity or your faith (Persona)"),
                        new Option ("One whose beauty is greatly accented using makeup (Persona)"),
                        new Option ("An impersonation of another hero (Persona)"),
                        new Option ("The embodiment of a school of magic (Persona)"),
                        new Option ("A warrior with distinctive armor (Persona)"),
                        new Option ("A disguise with animalistic or monstrous characteristics, meant to inspire fear (Persona)"),
                        new Option ("Other (Persona)")))))));
        pick.add(new BackGround("Faction Agent",//Acolyte
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Far Traveler",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I have different assumptions from those around me concerning personal space, blithely invading others' space in innocence, or reacting to ignorant invasion of my own."),
                        new Option ("I have my own ideas about what is and is not food, and I find the eating habits of those around me fascinating, confusing, or revolting."),
                        new Option ("I have a strong code of honor or sense of propriety that others don't comprehend."),
                        new Option ("I express affection or contempt in ways that are unfamiliar to others."),
                        new Option ("I honor my deities through practices that are foreign to this land."),
                        new Option ("I begin or end my day with small traditional rituals that are unfamiliar to those around me."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Open. I have much to learn from the kindly folk I meet along my way. (Good)"),
                        new Option ("Reserved. As someone new to these strange lands, I am cautious and respectful in my dealings. (Lawful)"),
                        new Option ("Adventure. I'm far from home, and everything is strange and wonderful! (Chaotic)"),
                        new Option ("Cunning. Though I may not know their ways, neither do they know mine, which can be to my advantage. (Evil)"),
                        new Option ("Inquisitive. Everything is new, but I have a thirst to learn. (Neutral)"),
                        new Option ("Suspicious. I must be careful, for I have no way of telling friend from foe here. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("So long as I have this token from my homeland, I can face any adversity in this strange land."),
                        new Option ("The gods of my people are a comfort to me so far from home."),
                        new Option ("I hold no greater cause than my service to my people."),
                        new Option ("My freedom is my most precious possession. I'll never let anyone take it from me again."),
                        new Option ("I'm fascinated by the beauty and wonder of this new land."),
                        new Option ("Though I had no choice, I lament having to leave my loved ones behind. I hope to see them again one day."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I am secretly (or not so secretly) convinced of the superiority of my own culture over that of this foreign land."),
                        new Option ("I pretend not to understand the local language in order to avoid interactions I would rather not have."),
                        new Option ("I have a weakness for the new intoxicants and other pleasures of this land."),
                        new Option ("I don't take kindly to some of the actions and motivations of the people of this land, because these folk are different from me."),
                        new Option ("I consider the adherents of other gods to be deluded innocents at best, or ignorant fools at worst."),
                        new Option ("I have a weakness for the exotic beauty of the people of these lands."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Emissary (Reason)"),
                        new Option ("Exile (Reason)"),
                        new Option ("Fugitive (Reason)"),
                        new Option ("Pilgrim (Reason)"),
                        new Option ("Sightseer (Reason)"),
                        new Option ("Wanderer (Reason)"),
                        new Option ("Other (Reason)")))))));
        pick.add(new BackGround("Feylost",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I'm haunted by fey laughter that only I can hear, though I know it's just my mind playing tricks on me."),
                        new Option ("Like a nomad, I can't settle down in one place for very long."),
                        new Option ("Good music makes me weep like a baby."),
                        new Option ("Wherever I go, I try to bring a little of the warmth and tranquility of home with me."),
                        new Option ("I have never lost my childlike sense of wonder."),
                        new Option ("When I have a new idea, I get wildly excited about it until I come up with another, better idea."),
                        new Option ("I live by my own set of weird and wonderful rules."),
                        new Option ("I can't bring myself to trust most adults."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Friendship. I never leave a friend behind. (Good)"),
                        new Option ("Empathy. No creature should be made to suffer. (Good)"),
                        new Option ("Wanderlust. I prefer to take the less traveled path. (Chaotic)"),
                        new Option ("Changeability. Change is good, which is why I live by an ever-changing set of rules. (Chaotic)"),
                        new Option ("Honor. A deal is a deal, and I would never break one. (Lawful)"),
                        new Option ("Rule of Three. Everything in the multiverse happens in threes. I see the \"rule of three\" everywhere. (Lawful)"),
                        new Option ("Obsession. I won't let go of a grudge. (Evil)"),
                        new Option ("Greed. I will do whatever it takes to get what I want, regardless of the harm it might cause. (Evil)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I would never break my word."),
                        new Option ("I find magic in all its forms to be compelling. The more magical a place, the more I am drawn to it."),
                        new Option ("I do what I can to protect the natural world."),
                        new Option ("A trusted friend is the most important thing in the multiverse to me."),
                        new Option ("I can't bring myself to harm a Fey creature, either because I consider myself one or because I fear the repercussions."),
                        new Option ("I'm drawn to the Feywild and long to return there, if only for a short while."),
                        new Option ("I feel indebted to a powerful fae for giving me a home and a purpose."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I easily lose track of time. My poor sense of time means I'm always either late or far too early, usually the former."),
                        new Option ("I think the whole multiverse is out to get me."),
                        new Option ("I'm always operating under a tight timeline, and I'm obsessed with keeping everything on schedule."),
                        new Option ("I'm a kleptomaniac who covets shiny, sparkling treasure."),
                        new Option ("I'm forgetful. Sometimes I can't remember even the simplest things."),
                        new Option ("I never give away anything for free and always expect something in return."),
                        new Option ("I have many vices and tend to indulge them."),
                        new Option ("I'm always changing my mind-well, almost always"),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Your eyes swirl with iridescent colors. (Fey Mark)"),
                        new Option ("You have a sweet scent, like that of nectar or honey (Fey Mark)"),
                        new Option ("You have long whiskers like those of a cat. (Fey Mark)"),
                        new Option ("Your ears are covered with soft tufts of fur. (Fey Mark)"),
                        new Option ("Your skin sparkles in moonlight. (Fey Mark)"),
                        new Option ("Flowers bloom in your presence. (Fey Mark)"),
                        new Option ("Flowers wilt in your presence. (Fey Mark)"),
                        new Option ("Your hair is made of vines or brambles and grows back to normal length within 1 hour of being cut (Fey Mark)"),
                        new Option ("You have a tail like that of a dog or another animal. (Fey Mark)"),
                        new Option ("Other (Fey Mark)")))))));
        pick.add(new BackGround("Fisher",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I am unmoved by the wrath of nature."),
                        new Option ("My friends are my crew; we sink or float together."),
                        new Option ("I need long stretches of quiet to clear my head."),
                        new Option ("Rich folk don't know the satisfaction of hard work."),
                        new Option ("I laugh heartily, feel deeply, and fear nothing."),
                        new Option ("I work hard; nature offers no handouts."),
                        new Option ("I dislike bargaining; state your price and mean it."),
                        new Option ("Luck favors me, and I take risks others might not."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Camaraderie. Good people make even the longest voyage bearable. (Good)"),
                        new Option ("Luck. Our luck depends on respecting its rulesâ€”now throw this salt over your shoulder. (Lawful)"),
                        new Option ("Daring. The richest bounty goes to those who risk everything. (Chaotic)"),
                        new Option ("Plunder. Take all that you can and leave nothing for the scavengers. (Evil)"),
                        new Option ("Balance. Do not fish the same spot twice in a row; suppress your greed, and nature will reward you. (Neutral)"),
                        new Option ("Hard Work. No wave can move a soul hard at work. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I lost something important in the deep sea, and I intend to find it."),
                        new Option ("Someone else's greed destroyed my livelihood, and I will be compensated."),
                        new Option ("I will fish the many famous waters of this land."),
                        new Option ("The gods saved me during a terrible storm, and I will honor their gift."),
                        new Option ("My destiny awaits me at the bottom of a particular pond in the Feywild."),
                        new Option ("I must repay my village's debt."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I am judgmental, especially of those I deem homebodies or otherwise lazy."),
                        new Option ("I become depressed and anxious if I'm away from the sea too long."),
                        new Option ("I have lived a hard life and find it difficult to empathize with others."),
                        new Option ("I am inclined to tell long-winded stories at inopportune times."),
                        new Option ("I work hard, but I play harder."),
                        new Option ("I am obsessed with catching an elusive aquatic beast, often to the detriment of other pursuits."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Lobster Wrestling. You fought in hand-to-hand combat with an immense lobster. (Fishing Tale)"),
                        new Option ("It Dragged the Boat. You nearly caught a fish of monstrous size that pulled your boat for miles. (Fishing Tale)"),
                        new Option ("Fins of Pure Gold. You caught a sea animal whose fins were made of pure gold, but another fisher stole it. (Fishing Tale)"),
                        new Option ("Ghost Fish. You are haunted by a ghostly fish that only you can see. (Fishing Tale)"),
                        new Option ("Nemesis Clam. A large clam containing a pearl the size of your head claimed one of your fingers before jetting away; one day, you'll find that clam. (Fishing Tale)"),
                        new Option ("It Swallowed the Sun. You once saw a fish leap from the water and turn day into night. (Fishing Tale)"),
                        new Option ("Dive into the Abyss. You found yourself in an underwater cave leading to the Abyss, and your luck has been sour ever since. (Fishing Tale)"),
                        new Option ("Love Story. You fell in love with a creature of pure water, but your brief romance ended tragically. (Fishing Tale)"),
                        new Option ("Other (Fishing Tale)")))))));
        pick.add(new BackGround("Folk Hero",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I judge people by their actions, not their words."),
                        new Option ("If someone is in trouble, I'm always ready to lend help"),
                        new Option ("When I set my mind to something, I follow through no matter what gets in my way."),
                        new Option ("I have a strong sense of fair play and always try to find the most equitable solution to arguments."),
                        new Option ("I'm confident in my own abilities and do what I can to instill confidence in others."),
                        new Option ("Thinking is for other people. I prefer action."),
                        new Option ("I misuse long words in an attempt to sound smarter."),
                        new Option ("I get bored easily. When am I going to get on with my destiny?"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Respect. People deserve to be treated with dignity and respect. (Good)"),
                        new Option ("Fairness. No one should get preferential treatment before the law, and no one is above the law. (Lawful)"),
                        new Option ("Freedom. Tyrants must not be allowed to oppress the people. (Chaotic)"),
                        new Option ("Might. If I become strong, I can take what I want â€“ what I deserve. (Evil)"),
                        new Option ("Sincerity. There's no good in pretending to be something I'm not. (Neutral)"),
                        new Option ("Destiny. Nothing and no one can steer me away from my higher calling. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I have a family, but I have no idea where they are. One day, I hope to see them again."),
                        new Option ("I worked the land, I love the land, and I will protect the land."),
                        new Option ("A proud noble once gave me a horrible beating, and I will take my revenge on any bully I encounter."),
                        new Option ("My tools are symbols of my past life, and I carry them so that I will never forget my roots."),
                        new Option ("I protect those who cannot protect themselves."),
                        new Option ("I wish my childhood sweetheart had come with me to pursue my destiny."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("The tyrant who rules my land will stop at nothing to see me killed."),
                        new Option ("I'm convinced of the significance of my destiny, and blind to my shortcomings and the risk of failure."),
                        new Option ("The people who knew me when I was young know my shameful secret, so I can never go home again."),
                        new Option ("I have a weakness for the vices of the city, especially hard drink."),
                        new Option ("Secretly, I believe that things would be better if I were a tyrant lording over the land."),
                        new Option ("I have trouble trusting in my allies."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("I stood up to a tyrant's agents. (Defining Event)"),
                        new Option ("I saved people during a natural disaster. (Defining Event)"),
                        new Option ("I stood alone against a terrible monster. (Defining Event)"),
                        new Option ("I stole from a corrupt merchant to help the poor. (Defining Event)"),
                        new Option ("I led a militia to fight off an invading army. (Defining Event)"),
                        new Option ("I broke into a tyrant's castle and stole weapons to arm the people. (Defining Event)"),
                        new Option ("I trained the peasantry to use farm implements as weapons against a tyrant's soldiers. (Defining Event)"),
                        new Option ("A lord rescinded an unpopular decree after I led a symbolic act of protest against it. (Defining Event)"),
                        new Option ("A celestial, fey, or similar creature gave me a blessing or revealed my secret origin. (Defining Event)"),
                        new Option ("Recruited into a lord's army, I rose to leadership and was commended for my heroism. (Defining Event)"),
                        new Option ("Other (Defining Event)")))))));
        pick.add(new BackGround("Giant Foundling",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("What I lack in stature, I make up for with sheer spite."),
                        new Option ("I insist on being taken seriously as a full-grown adult. Nobody talks down to me!"),
                        new Option ("Crowded spaces make me uncomfortable. Iâ€™d much rather be in a wide-open field than a bustling tavern."),
                        new Option ("I embrace my shorter stature. It helps me stay unnoticedâ€”and underestimated."),
                        new Option ("Every avalanche begins as a single pebble."),
                        new Option ("The world always feels too big, and Iâ€™m afraid Iâ€™ll never find my place in it."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("You were found as a baby by a family of nomadic giants who raised you as one of their own. (Foundling Origin)"),
                        new Option ("A family of stone giants rescued you when you fell into a mountain chasm, and you have lived with them underground ever since. (Foundling Origin)"),
                        new Option ("You were lost or abandoned as a child in a jungle that teemed with ravenous dinosaurs. There, you found an equally lost frost giant; together, you survived. (Foundling Origin)"),
                        new Option ("Your farm was crushed and your family killed in a battle between warring groups of giants. Racked with guilt over the destruction, a sympathetic giant soldier promised to care for you. (Foundling Origin)"),
                        new Option ("After you had a series of strange dreams as a child, your superstitious parents sent you to study with a powerful but aloof storm giant oracle. (Foundling Origin)"),
                        new Option ("While playing hide-and-seek with your friends, you stumbled into the castle of a cloud giant, who immediately adopted you. (Foundling Origin)"),
                        new Option ("Other (Foundling Origin)")))))));
        pick.add(new BackGround("Guild Artisan",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I believe that anything worth doing is worth doing right. I can't help it â€“ I'm a perfectionist."),
                        new Option ("I'm a snob who looks down on those who can't appreciate fine art."),
                        new Option ("I always want to know how things work and what makes people tick."),
                        new Option ("I'm full of witty aphorisms and have a proverb for every occasion."),
                        new Option ("I'm rude to people who lack my commitment to hard work and fair play."),
                        new Option ("I like to talk at length about my profession."),
                        new Option ("I don't part with my money easily and will haggle tirelessly to get the best deal possible."),
                        new Option ("I'm well known for my work, and I want to make sure everyone appreciates it. I'm always taken aback when people haven't heard of me."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Community. It is the duty of all civilized people to strengthen the bonds of community and the security of civilization. (Lawful)"),
                        new Option ("Generosity. My talents were given to me so that I could use them to benefit the world. (Good)"),
                        new Option ("Freedom. Everyone should be free to pursue his or her own livelihood. (Chaotic)"),
                        new Option ("Greed. I'm only in it for the money. (Evil)"),
                        new Option ("People. I'm committed to the people I care about, not to ideals. (Neutral)"),
                        new Option ("Aspiration. I work hard to be the best there is at my craft. (Any)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("The workshop where I learned my trade is the most important place in the world to me."),
                        new Option ("I created a great work for someone, and then found them unworthy to receive it. I'm still looking for someone worthy."),
                        new Option ("I owe my guild a great debt for forging me into the person I am today."),
                        new Option ("I pursue wealth to secure someone's love."),
                        new Option ("One day I will return to my guild and prove that I am the greatest artisan of them all."),
                        new Option ("I will get revenge on the evil forces that destroyed my place of business and ruined my livelihood."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I'll do anything to get my hands on something rare or priceless."),
                        new Option ("I'm quick to assume that someone is trying to cheat me."),
                        new Option ("No one must ever learn that I once stole money from guild coffers."),
                        new Option ("I'm never satisfied with what I have â€“ I always want more."),
                        new Option ("I would kill to acquire a noble title."),
                        new Option ("I'm horribly jealous of anyone who can outshine my handiwork. Everywhere I go, I'm surrounded by rivals."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("Alchemist (Guild Business)"),
                        new Option ("Apothecary (Guild Business)"),
                        new Option ("Armorer (Guild Business)"),
                        new Option ("Locksmith (Guild Business)"),
                        new Option ("Finesmith (Guild Business)"),
                        new Option ("Brewer (Guild Business)"),
                        new Option ("Distiller (Guild Business)"),
                        new Option ("Vintner (Guild Business)"),
                        new Option ("Calligrapher (Guild Business)"),
                        new Option ("Scribe (Guild Business)"),
                        new Option ("Scrivener (Guild Business)"),
                        new Option ("Carpenter (Guild Business)"),
                        new Option ("Roofer (Guild Business)"),
                        new Option ("Plasterer (Guild Business)"),
                        new Option ("Cartographer (Guild Business)"),
                        new Option ("Surveyor (Guild Business)"),
                        new Option ("Chart-maker (Guild Business)"),
                        new Option ("Cobbler (Guild Business)"),
                        new Option ("Shoemaker (Guild Business)"),
                        new Option ("Cook (Guild Business)"),
                        new Option ("Baker (Guild Business)"),
                        new Option ("Glassblower (Guild Business)"),
                        new Option ("Glazier (Guild Business)"),
                        new Option ("Jeweler (Guild Business)"),
                        new Option ("Gemcutter (Guild Business)"),
                        new Option ("Leatherworker (Guild Business)"),
                        new Option ("Skinner (Guild Business)"),
                        new Option ("Tanner (Guild Business)"),
                        new Option ("Mason (Guild Business)"),
                        new Option ("Stonecutter (Guild Business)"),
                        new Option ("Painter (Guild Business)"),
                        new Option ("Limner (Guild Business)"),
                        new Option ("Sign-maker (Guild Business)"),
                        new Option ("Potter (Guild Business)"),
                        new Option ("Tile-maker (Guild Business)"),
                        new Option ("Shipwright (Guild Business)"),
                        new Option ("Sailmaker (Guild Business)"),
                        new Option ("Smith (Guild Business)"),
                        new Option ("Metal-forger (Guild Business)"),
                        new Option ("Tinker (Guild Business)"),
                        new Option ("pewterer (Guild Business)"),
                        new Option ("Caster (Guild Business)"),
                        new Option ("Wagon-maker (Guild Business)"),
                        new Option ("Wheelwright (Guild Business)"),
                        new Option ("Weaver (Guild Business)"),
                        new Option ("Dyer (Guild Business)"),
                        new Option ("Woodcarver (Guild Business)"),
                        new Option ("Cooper (Guild Business)"),
                        new Option ("Bowyer (Guild Business)"),
                        new Option ("Merchant (Guild Business)"),
                        new Option ("Traveling Merchant (Guild Business)"),
                        new Option ("Caravan Master (Guild Business)"),
                        new Option ("Shopkeeper (Guild Business)"),
                        new Option ("Other (Guild Business)")))))));

        pick.add(new BackGround("Haunted One",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option ("I don't run from evil. Evil runs from me."),
                        new Option ("I like to read and memorize poetry. It keeps me calm and brings me fleeting moments of happiness."),
                        new Option ("I spend money freely and live life to the fullest, knowing that tomorrow I might die."),
                        new Option ("I live for the thrill of the hunt."),
                        new Option ("I donâ€™t talk about the thing that torments me. Iâ€™d rather not burden others with my curse."),
                        new Option ("I expect danger around every corner."),
                        new Option ("I refuse to become a victim, and I will not allow others to be victimized."),
                        new Option ("I put no trust in divine beings."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option ("Selflessness. I try to help those in need, no matter what the personal cost. (Good)"),
                        new Option ("Determination. Iâ€™ll stop the spirits that haunt me or die trying. (Any)"),
                        new Option ("Greater Good. I kill monsters to make the world a safer place, and to exorcise my own demons. (Good)"),
                        new Option ("Freedom. I have a dark calling that puts me above the law. (Chaotic)"),
                        new Option ("Logic. I like to know my enemyâ€™s capabilities and weaknesses before rushing into battle. (Lawful)"),
                        new Option ("Destruction. Iâ€™m a monster that destroys other monsters, and anything else that gets in my way. (Evil)"),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option ("I keep my thoughts and discoveries in a journal. My journal is my legacy."),
                        new Option ("I would sacrifice my life and my soul to protect the innocent."),
                        new Option ("My torment drove away the person I love. I strive to win back the love Iâ€™ve lost."),
                        new Option ("A terrible guilt consumes me. I hope that I can find redemption through my actions."),
                        new Option ("Thereâ€™s evil in me, I can feel it. It must never be set free."),
                        new Option ("I have a child to protect. I must make the world a safer place for them."),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option ("I have certain rituals that I must follow every day. I can never break them."),
                        new Option ("I assume the worst in people."),
                        new Option ("I feel no compassion for the dead. Theyâ€™re the lucky ones."),
                        new Option ("I have an addiction."),
                        new Option ("I am a purveyor of doom and gloom who lives in a world without hope."),
                        new Option ("I talk to spirits that no one else can see."),
                        new Option ("Other."))),
                new ArrayList<ArrayList<Option>>(Arrays.asList(new ArrayList<Option>(Arrays.asList(
                        new Option ("A monster that slaughtered dozens of innocent people spared your life, and you donâ€™t know why. (Harrowing Event)"),
                        new Option ("You were born under a dark star. You can feel it watching you, coldly and distantly. Sometimes it beckons you in the dead of night. (Harrowing Event)"),
                        new Option ("An apparition that has haunted your family for generations now haunts you. You donâ€™t know what it wants, and it wonâ€™t leave you alone. (Harrowing Event)"),
                        new Option ("Your family has a history of practicing the dark arts. You dabbled once and felt something horrible clutch at your soul, whereupon you fled in terror. (Harrowing Event)"),
                        new Option ("An oni took your sibling one cold, dark night, and you were unable to stop it. (Harrowing Event)"),
                        new Option ("You were cursed with lycanthropy and later cured. You are now haunted by the innocents you slaughtered. (Harrowing Event)"),
                        new Option ("A hag kidnapped and raised you. You escaped, but the hag still has a magical hold over you and fills your mind with evil thoughts. (Harrowing Event)"),
                        new Option ("You opened an eldritch tome and saw things unfit for a sane mind. You burned the book, but its words and images are burned into your psyche. (Harrowing Event)"),
                        new Option ("A fiend possessed you as a child. You were locked away but escaped. The fiend is still inside you, but now you try to keep it locked away. (Harrowing Event)"),
                        new Option ("You did terrible things to avenge the murder of someone you loved. You became a monster, and it haunts your waking dreams. (Harrowing Event)"),
                        new Option ("Other (Harrowing Event)")))))));
        pick.add(new BackGround("Hermit",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("House Agent",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Inheritor",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Investigator (VRGR)",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Knight of the Order",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Marine",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Mercenary Veteran",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Noble",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Outlander",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Pirate",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Rewarded",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Ruined",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Rune Carver",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Sage",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Sailor",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Shipwright",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Smuggler",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Soldier",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Spy",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Urban Bounty Hunter",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));
        pick.add(new BackGround("Urchin",
                new ArrayList<>(Arrays.asList(//Traits
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Ideals
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Bonds
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other."))),
                new ArrayList<>(Arrays.asList(//Flaws
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option (""),
                        new Option ("Other.")))));

        Option a = Question.ask(pick, "Choose your background");
        list.add(a);

        return list;
    }
}